// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniStay.API.Data;

#nullable disable

namespace UniStay.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniStay.API.Data.Models.Announcements", b =>
                {
                    b.Property<int>("AnnouncementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisibleTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnouncementID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("ApplicationStatus");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Applications", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationID"));

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignedRoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DecisionAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DecisionByUserID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredRoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.HasKey("ApplicationID");

                    b.HasIndex("AssignedRoomID");

                    b.HasIndex("DecisionByUserID");

                    b.HasIndex("StatusID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.BedAssignments", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentID"));

                    b.Property<int>("BedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentID");

                    b.HasIndex("BedID");

                    b.HasIndex("StudentID");

                    b.ToTable("BedAssignment");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Beds", b =>
                {
                    b.Property<int>("BedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BedID"));

                    b.Property<string>("BedNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("BedID");

                    b.HasIndex("RoomID");

                    b.ToTable("Bed");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.EquipmentRecords", b =>
                {
                    b.Property<int>("RecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordID"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.HasKey("RecordID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("EquipmentID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("EquipmentRecord");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Equipments", b =>
                {
                    b.Property<int>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentID"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RentalPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipmentID");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Faults", b =>
                {
                    b.Property<int>("FaultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaultID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaultID");

                    b.HasIndex("ReportedByUserID");

                    b.HasIndex("RoomID");

                    b.ToTable("Fault");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.HallReservations", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationID"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationID");

                    b.HasIndex("HallID");

                    b.HasIndex("StudentID");

                    b.ToTable("HallReservation");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Halls", b =>
                {
                    b.Property<int>("HallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallID"));

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailableTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HallID");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Invoices", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<bool>("EmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IssuedAt")
                        .HasColumnType("bit");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("StudentID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Messages", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageID"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverUserID")
                        .HasColumnType("int");

                    b.Property<int>("SenderUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserID1")
                        .HasColumnType("int");

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverUserID");

                    b.HasIndex("SenderUserID");

                    b.HasIndex("UsersUserID");

                    b.HasIndex("UsersUserID1");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Payments", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int?>("InvoicesInvoiceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("InvoicesInvoiceID");

                    b.HasIndex("StudentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Rooms", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int?>("HallsHallID")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HallsHallID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Announcements", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Users", "CreatedByUser")
                        .WithMany("Announcements")
                        .HasForeignKey("CreatedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Applications", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Rooms", "AssignedRoom")
                        .WithMany("Applications")
                        .HasForeignKey("AssignedRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "DecisionByUser")
                        .WithMany()
                        .HasForeignKey("DecisionByUserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UniStay.API.Data.Models.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", null)
                        .WithMany("Applications")
                        .HasForeignKey("UsersUserID");

                    b.Navigation("AssignedRoom");

                    b.Navigation("DecisionByUser");

                    b.Navigation("Status");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.BedAssignments", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Beds", "Bed")
                        .WithMany("BedAssignments")
                        .HasForeignKey("BedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Beds", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Rooms", "Room")
                        .WithMany("Beds")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.EquipmentRecords", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Users", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Equipments", "Equipment")
                        .WithMany("EquipmentRecords")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", null)
                        .WithMany("EquipmentRecords")
                        .HasForeignKey("UsersUserID");

                    b.Navigation("Employee");

                    b.Navigation("Equipment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Faults", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Users", "ReportedByUser")
                        .WithMany("Faults")
                        .HasForeignKey("ReportedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Rooms", "Room")
                        .WithMany("Faults")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.HallReservations", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Halls", "Hall")
                        .WithMany("HallReservations")
                        .HasForeignKey("HallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany("HallReservations")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Invoices", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany("Invoices")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Messages", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Users", "ReceiverUser")
                        .WithMany()
                        .HasForeignKey("ReceiverUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Users", null)
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("UsersUserID");

                    b.HasOne("UniStay.API.Data.Models.Users", null)
                        .WithMany("SentMessages")
                        .HasForeignKey("UsersUserID1");

                    b.Navigation("ReceiverUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Payments", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Invoices", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniStay.API.Data.Models.Invoices", null)
                        .WithMany("Payments")
                        .HasForeignKey("InvoicesInvoiceID");

                    b.HasOne("UniStay.API.Data.Models.Users", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Rooms", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Halls", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HallsHallID");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Users", b =>
                {
                    b.HasOne("UniStay.API.Data.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Beds", b =>
                {
                    b.Navigation("BedAssignments");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Equipments", b =>
                {
                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Halls", b =>
                {
                    b.Navigation("HallReservations");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Invoices", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Rooms", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Beds");

                    b.Navigation("Faults");
                });

            modelBuilder.Entity("UniStay.API.Data.Models.Users", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Applications");

                    b.Navigation("EquipmentRecords");

                    b.Navigation("Faults");

                    b.Navigation("HallReservations");

                    b.Navigation("Invoices");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
